"use strict";(self.webpackChunkai_text_processor=self.webpackChunkai_text_processor||[]).push([[736],{"./node_modules/react-bootstrap/esm/Modal.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>react_bootstrap_esm_Modal});var size,classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),addEventListener=__webpack_require__("./node_modules/dom-helpers/esm/addEventListener.js"),canUseDOM=__webpack_require__("./node_modules/dom-helpers/esm/canUseDOM.js"),ownerDocument=__webpack_require__("./node_modules/dom-helpers/esm/ownerDocument.js"),removeEventListener=__webpack_require__("./node_modules/dom-helpers/esm/removeEventListener.js");function scrollbarSize(recalc){if((!size&&0!==size||recalc)&&canUseDOM.c){var scrollDiv=document.createElement("div");scrollDiv.style.position="absolute",scrollDiv.style.top="-9999px",scrollDiv.style.width="50px",scrollDiv.style.height="50px",scrollDiv.style.overflow="scroll",document.body.appendChild(scrollDiv),size=scrollDiv.offsetWidth-scrollDiv.clientWidth,document.body.removeChild(scrollDiv)}return size}var useCallbackRef=__webpack_require__("./node_modules/@restart/hooks/esm/useCallbackRef.js"),useEventCallback=__webpack_require__("./node_modules/@restart/hooks/esm/useEventCallback.js"),useMergedRefs=__webpack_require__("./node_modules/@restart/hooks/esm/useMergedRefs.js"),react=__webpack_require__("./node_modules/react/index.js");function useWillUnmount(fn){const onUnmount=function useUpdatedRef(value){const valueRef=(0,react.useRef)(value);return valueRef.current=value,valueRef}(fn);(0,react.useEffect)((()=>()=>onUnmount.current()),[])}var transitionEnd=__webpack_require__("./node_modules/dom-helpers/esm/transitionEnd.js");function activeElement(doc){void 0===doc&&(doc=(0,ownerDocument.c)());try{var active=doc.activeElement;return active&&active.nodeName?active:null}catch(e){return doc.body}}var contains=__webpack_require__("./node_modules/dom-helpers/esm/contains.js"),listen=__webpack_require__("./node_modules/dom-helpers/esm/listen.js"),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),useMounted=__webpack_require__("./node_modules/@restart/hooks/esm/useMounted.js"),usePrevious=__webpack_require__("./node_modules/@restart/hooks/esm/usePrevious.js"),css=__webpack_require__("./node_modules/dom-helpers/esm/css.js");const OPEN_DATA_ATTRIBUTE=(0,__webpack_require__("./node_modules/@restart/ui/esm/DataKey.js").qr)("modal-open");const esm_ModalManager=class ModalManager{constructor({ownerDocument,handleContainerOverflow=!0,isRTL=!1}={}){this.handleContainerOverflow=handleContainerOverflow,this.isRTL=isRTL,this.modals=[],this.ownerDocument=ownerDocument}getScrollbarWidth(){return function getBodyScrollbarWidth(ownerDocument=document){const window=ownerDocument.defaultView;return Math.abs(window.innerWidth-ownerDocument.documentElement.clientWidth)}(this.ownerDocument)}getElement(){return(this.ownerDocument||document).body}setModalAttributes(_modal){}removeModalAttributes(_modal){}setContainerStyle(containerState){const style={overflow:"hidden"},paddingProp=this.isRTL?"paddingLeft":"paddingRight",container=this.getElement();containerState.style={overflow:container.style.overflow,[paddingProp]:container.style[paddingProp]},containerState.scrollBarWidth&&(style[paddingProp]=`${parseInt((0,css.c)(container,paddingProp)||"0",10)+containerState.scrollBarWidth}px`),container.setAttribute(OPEN_DATA_ATTRIBUTE,""),(0,css.c)(container,style)}reset(){[...this.modals].forEach((m=>this.remove(m)))}removeContainerStyle(containerState){const container=this.getElement();container.removeAttribute(OPEN_DATA_ATTRIBUTE),Object.assign(container.style,containerState.style)}add(modal){let modalIdx=this.modals.indexOf(modal);return-1!==modalIdx?modalIdx:(modalIdx=this.modals.length,this.modals.push(modal),this.setModalAttributes(modal),0!==modalIdx||(this.state={scrollBarWidth:this.getScrollbarWidth(),style:{}},this.handleContainerOverflow&&this.setContainerStyle(this.state)),modalIdx)}remove(modal){const modalIdx=this.modals.indexOf(modal);-1!==modalIdx&&(this.modals.splice(modalIdx,1),!this.modals.length&&this.handleContainerOverflow&&this.removeContainerStyle(this.state),this.removeModalAttributes(modal))}isTopModal(modal){return!!this.modals.length&&this.modals[this.modals.length-1]===modal}};var useWindow=__webpack_require__("./node_modules/@restart/ui/esm/useWindow.js");const resolveContainerRef=(ref,document)=>canUseDOM.c?null==ref?(document||(0,ownerDocument.c)()).body:("function"==typeof ref&&(ref=ref()),ref&&"current"in ref&&(ref=ref.current),ref&&("nodeType"in ref||ref.getBoundingClientRect)?ref:null):null;var useIsomorphicEffect=__webpack_require__("./node_modules/@restart/hooks/esm/useIsomorphicEffect.js");const esm_NoopTransition=function NoopTransition({children,in:inProp,onExited,mountOnEnter,unmountOnExit}){const ref=(0,react.useRef)(null),hasEnteredRef=(0,react.useRef)(inProp),handleExited=(0,useEventCallback.c)(onExited);(0,react.useEffect)((()=>{inProp?hasEnteredRef.current=!0:handleExited(ref.current)}),[inProp,handleExited]);const combinedRef=(0,useMergedRefs.c)(ref,children.ref),child=(0,react.cloneElement)(children,{ref:combinedRef});return inProp?child:unmountOnExit||!hasEnteredRef.current&&mountOnEnter?null:child};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ImperativeTransition({children,in:inProp,onExited,onEntered,transition}){const[exited,setExited]=(0,react.useState)(!inProp);inProp&&exited&&setExited(!1);const ref=function useTransition({in:inProp,onTransition}){const ref=(0,react.useRef)(null),isInitialRef=(0,react.useRef)(!0),handleTransition=(0,useEventCallback.c)(onTransition);return(0,useIsomorphicEffect.c)((()=>{if(!ref.current)return;let stale=!1;return handleTransition({in:inProp,element:ref.current,initial:isInitialRef.current,isStale:()=>stale}),()=>{stale=!0}}),[inProp,handleTransition]),(0,useIsomorphicEffect.c)((()=>(isInitialRef.current=!1,()=>{isInitialRef.current=!0})),[]),ref}({in:!!inProp,onTransition:options=>{Promise.resolve(transition(options)).then((()=>{options.isStale()||(options.in?null==onEntered||onEntered(options.element,options.initial):(setExited(!0),null==onExited||onExited(options.element)))}),(error=>{throw options.in||setExited(!0),error}))}}),combinedRef=(0,useMergedRefs.c)(ref,children.ref);return exited&&!inProp?null:(0,react.cloneElement)(children,{ref:combinedRef})}function renderTransition(Component,runTransition,props){return Component?(0,jsx_runtime.jsx)(Component,Object.assign({},props)):runTransition?(0,jsx_runtime.jsx)(ImperativeTransition,Object.assign({},props,{transition:runTransition})):(0,jsx_runtime.jsx)(esm_NoopTransition,Object.assign({},props))}const _excluded=["show","role","className","style","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","manager","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered"];let manager;function useModalManager(provided){const window=(0,useWindow.c)(),modalManager=provided||function getManager(window){return manager||(manager=new esm_ModalManager({ownerDocument:null==window?void 0:window.document})),manager}(window),modal=(0,react.useRef)({dialog:null,backdrop:null});return Object.assign(modal.current,{add:()=>modalManager.add(modal.current),remove:()=>modalManager.remove(modal.current),isTopModal:()=>modalManager.isTopModal(modal.current),setDialogRef:(0,react.useCallback)((ref=>{modal.current.dialog=ref}),[]),setBackdropRef:(0,react.useCallback)((ref=>{modal.current.backdrop=ref}),[])})}const Modal=(0,react.forwardRef)(((_ref,ref)=>{let{show=!1,role="dialog",className,style,children,backdrop=!0,keyboard=!0,onBackdropClick,onEscapeKeyDown,transition,runTransition,backdropTransition,runBackdropTransition,autoFocus=!0,enforceFocus=!0,restoreFocus=!0,restoreFocusOptions,renderDialog,renderBackdrop=props=>(0,jsx_runtime.jsx)("div",Object.assign({},props)),manager:providedManager,container:containerRef,onShow,onHide=()=>{},onExit,onExited,onExiting,onEnter,onEntering,onEntered}=_ref,rest=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_ref,_excluded);const ownerWindow=(0,useWindow.c)(),container=function useWaitForDOMRef(ref,onResolved){const window=(0,useWindow.c)(),[resolvedRef,setRef]=(0,react.useState)((()=>resolveContainerRef(ref,null==window?void 0:window.document)));if(!resolvedRef){const earlyRef=resolveContainerRef(ref);earlyRef&&setRef(earlyRef)}return(0,react.useEffect)((()=>{onResolved&&resolvedRef&&onResolved(resolvedRef)}),[onResolved,resolvedRef]),(0,react.useEffect)((()=>{const nextRef=resolveContainerRef(ref);nextRef!==resolvedRef&&setRef(nextRef)}),[ref,resolvedRef]),resolvedRef}(containerRef),modal=useModalManager(providedManager),isMounted=(0,useMounted.c)(),prevShow=(0,usePrevious.c)(show),[exited,setExited]=(0,react.useState)(!show),lastFocusRef=(0,react.useRef)(null);(0,react.useImperativeHandle)(ref,(()=>modal),[modal]),canUseDOM.c&&!prevShow&&show&&(lastFocusRef.current=activeElement(null==ownerWindow?void 0:ownerWindow.document)),show&&exited&&setExited(!1);const handleShow=(0,useEventCallback.c)((()=>{if(modal.add(),removeKeydownListenerRef.current=(0,listen.c)(document,"keydown",handleDocumentKeyDown),removeFocusListenerRef.current=(0,listen.c)(document,"focus",(()=>setTimeout(handleEnforceFocus)),!0),onShow&&onShow(),autoFocus){var _modal$dialog$ownerDo,_modal$dialog;const currentActiveElement=activeElement(null!=(_modal$dialog$ownerDo=null==(_modal$dialog=modal.dialog)?void 0:_modal$dialog.ownerDocument)?_modal$dialog$ownerDo:null==ownerWindow?void 0:ownerWindow.document);modal.dialog&&currentActiveElement&&!(0,contains.c)(modal.dialog,currentActiveElement)&&(lastFocusRef.current=currentActiveElement,modal.dialog.focus())}})),handleHide=(0,useEventCallback.c)((()=>{var _lastFocusRef$current;(modal.remove(),null==removeKeydownListenerRef.current||removeKeydownListenerRef.current(),null==removeFocusListenerRef.current||removeFocusListenerRef.current(),restoreFocus)&&(null==(_lastFocusRef$current=lastFocusRef.current)||null==_lastFocusRef$current.focus||_lastFocusRef$current.focus(restoreFocusOptions),lastFocusRef.current=null)}));(0,react.useEffect)((()=>{show&&container&&handleShow()}),[show,container,handleShow]),(0,react.useEffect)((()=>{exited&&handleHide()}),[exited,handleHide]),useWillUnmount((()=>{handleHide()}));const handleEnforceFocus=(0,useEventCallback.c)((()=>{if(!enforceFocus||!isMounted()||!modal.isTopModal())return;const currentActiveElement=activeElement(null==ownerWindow?void 0:ownerWindow.document);modal.dialog&&currentActiveElement&&!(0,contains.c)(modal.dialog,currentActiveElement)&&modal.dialog.focus()})),handleBackdropClick=(0,useEventCallback.c)((e=>{e.target===e.currentTarget&&(null==onBackdropClick||onBackdropClick(e),!0===backdrop&&onHide())})),handleDocumentKeyDown=(0,useEventCallback.c)((e=>{keyboard&&function isEscKey(e){return"Escape"===e.code||27===e.keyCode}(e)&&modal.isTopModal()&&(null==onEscapeKeyDown||onEscapeKeyDown(e),e.defaultPrevented||onHide())})),removeFocusListenerRef=(0,react.useRef)(),removeKeydownListenerRef=(0,react.useRef)();if(!container)return null;const dialogProps=Object.assign({role,ref:modal.setDialogRef,"aria-modal":"dialog"===role||void 0},rest,{style,className,tabIndex:-1});let dialog=renderDialog?renderDialog(dialogProps):(0,jsx_runtime.jsx)("div",Object.assign({},dialogProps,{children:react.cloneElement(children,{role:"document"})}));dialog=renderTransition(transition,runTransition,{unmountOnExit:!0,mountOnEnter:!0,appear:!0,in:!!show,onExit,onExiting,onExited:(...args)=>{setExited(!0),null==onExited||onExited(...args)},onEnter,onEntering,onEntered,children:dialog});let backdropElement=null;return backdrop&&(backdropElement=renderBackdrop({ref:modal.setBackdropRef,onClick:handleBackdropClick}),backdropElement=renderTransition(backdropTransition,runBackdropTransition,{in:!!show,appear:!0,mountOnEnter:!0,unmountOnExit:!0,children:backdropElement})),(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:react_dom.createPortal((0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[backdropElement,dialog]}),container)})}));Modal.displayName="Modal";const esm_Modal=Object.assign(Modal,{Manager:esm_ModalManager});var querySelectorAll=__webpack_require__("./node_modules/dom-helpers/esm/querySelectorAll.js");function replaceClassName(origClass,classToRemove){return origClass.replace(new RegExp("(^|\\s)"+classToRemove+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}const Selector_FIXED_CONTENT=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",Selector_STICKY_CONTENT=".sticky-top",Selector_NAVBAR_TOGGLER=".navbar-toggler";class BootstrapModalManager extends esm_ModalManager{adjustAndStore(prop,element,adjust){const actual=element.style[prop];element.dataset[prop]=actual,(0,css.c)(element,{[prop]:`${parseFloat((0,css.c)(element,prop))+adjust}px`})}restore(prop,element){const value=element.dataset[prop];void 0!==value&&(delete element.dataset[prop],(0,css.c)(element,{[prop]:value}))}setContainerStyle(containerState){super.setContainerStyle(containerState);const container=this.getElement();if(function addClass(element,className){element.classList?element.classList.add(className):function hasClass(element,className){return element.classList?!!className&&element.classList.contains(className):-1!==(" "+(element.className.baseVal||element.className)+" ").indexOf(" "+className+" ")}(element,className)||("string"==typeof element.className?element.className=element.className+" "+className:element.setAttribute("class",(element.className&&element.className.baseVal||"")+" "+className))}(container,"modal-open"),!containerState.scrollBarWidth)return;const paddingProp=this.isRTL?"paddingLeft":"paddingRight",marginProp=this.isRTL?"marginLeft":"marginRight";(0,querySelectorAll.c)(container,Selector_FIXED_CONTENT).forEach((el=>this.adjustAndStore(paddingProp,el,containerState.scrollBarWidth))),(0,querySelectorAll.c)(container,Selector_STICKY_CONTENT).forEach((el=>this.adjustAndStore(marginProp,el,-containerState.scrollBarWidth))),(0,querySelectorAll.c)(container,Selector_NAVBAR_TOGGLER).forEach((el=>this.adjustAndStore(marginProp,el,containerState.scrollBarWidth)))}removeContainerStyle(containerState){super.removeContainerStyle(containerState);const container=this.getElement();!function removeClass(element,className){element.classList?element.classList.remove(className):"string"==typeof element.className?element.className=replaceClassName(element.className,className):element.setAttribute("class",replaceClassName(element.className&&element.className.baseVal||"",className))}(container,"modal-open");const paddingProp=this.isRTL?"paddingLeft":"paddingRight",marginProp=this.isRTL?"marginLeft":"marginRight";(0,querySelectorAll.c)(container,Selector_FIXED_CONTENT).forEach((el=>this.restore(paddingProp,el))),(0,querySelectorAll.c)(container,Selector_STICKY_CONTENT).forEach((el=>this.restore(marginProp,el))),(0,querySelectorAll.c)(container,Selector_NAVBAR_TOGGLER).forEach((el=>this.restore(marginProp,el)))}}let sharedManager;var Fade=__webpack_require__("./node_modules/react-bootstrap/esm/Fade.js"),ThemeProvider=__webpack_require__("./node_modules/react-bootstrap/esm/ThemeProvider.js");const ModalBody=react.forwardRef((({className,bsPrefix,as:Component="div",...props},ref)=>(bsPrefix=(0,ThemeProvider.Ky)(bsPrefix,"modal-body"),(0,jsx_runtime.jsx)(Component,{ref,className:classnames_default()(className,bsPrefix),...props}))));ModalBody.displayName="ModalBody";const esm_ModalBody=ModalBody,esm_ModalContext=react.createContext({onHide(){}}),ModalDialog=react.forwardRef((({bsPrefix,className,contentClassName,centered,size,fullscreen,children,scrollable,...props},ref)=>{const dialogClass=`${bsPrefix=(0,ThemeProvider.Ky)(bsPrefix,"modal")}-dialog`,fullScreenClass="string"==typeof fullscreen?`${bsPrefix}-fullscreen-${fullscreen}`:`${bsPrefix}-fullscreen`;return(0,jsx_runtime.jsx)("div",{...props,ref,className:classnames_default()(dialogClass,className,size&&`${bsPrefix}-${size}`,centered&&`${dialogClass}-centered`,scrollable&&`${dialogClass}-scrollable`,fullscreen&&fullScreenClass),children:(0,jsx_runtime.jsx)("div",{className:classnames_default()(`${bsPrefix}-content`,contentClassName),children})})}));ModalDialog.displayName="ModalDialog";const esm_ModalDialog=ModalDialog,ModalFooter=react.forwardRef((({className,bsPrefix,as:Component="div",...props},ref)=>(bsPrefix=(0,ThemeProvider.Ky)(bsPrefix,"modal-footer"),(0,jsx_runtime.jsx)(Component,{ref,className:classnames_default()(className,bsPrefix),...props}))));ModalFooter.displayName="ModalFooter";const esm_ModalFooter=ModalFooter;var CloseButton=__webpack_require__("./node_modules/react-bootstrap/esm/CloseButton.js");const esm_AbstractModalHeader=react.forwardRef((({closeLabel="Close",closeVariant,closeButton=!1,onHide,children,...props},ref)=>{const context=(0,react.useContext)(esm_ModalContext),handleClick=(0,useEventCallback.c)((()=>{null==context||context.onHide(),null==onHide||onHide()}));return(0,jsx_runtime.jsxs)("div",{ref,...props,children:[children,closeButton&&(0,jsx_runtime.jsx)(CloseButton.c,{"aria-label":closeLabel,variant:closeVariant,onClick:handleClick})]})})),ModalHeader=react.forwardRef((({bsPrefix,className,closeLabel="Close",closeButton=!1,...props},ref)=>(bsPrefix=(0,ThemeProvider.Ky)(bsPrefix,"modal-header"),(0,jsx_runtime.jsx)(esm_AbstractModalHeader,{ref,...props,className:classnames_default()(className,bsPrefix),closeLabel,closeButton}))));ModalHeader.displayName="ModalHeader";const esm_ModalHeader=ModalHeader;const DivStyledAsH4=(0,__webpack_require__("./node_modules/react-bootstrap/esm/divWithClassName.js").c)("h4"),ModalTitle=react.forwardRef((({className,bsPrefix,as:Component=DivStyledAsH4,...props},ref)=>(bsPrefix=(0,ThemeProvider.Ky)(bsPrefix,"modal-title"),(0,jsx_runtime.jsx)(Component,{ref,className:classnames_default()(className,bsPrefix),...props}))));ModalTitle.displayName="ModalTitle";const esm_ModalTitle=ModalTitle;function DialogTransition(props){return(0,jsx_runtime.jsx)(Fade.c,{...props,timeout:null})}function BackdropTransition(props){return(0,jsx_runtime.jsx)(Fade.c,{...props,timeout:null})}const Modal_Modal=react.forwardRef((({bsPrefix,className,style,dialogClassName,contentClassName,children,dialogAs:Dialog=esm_ModalDialog,"aria-labelledby":ariaLabelledby,"aria-describedby":ariaDescribedby,"aria-label":ariaLabel,show=!1,animation=!0,backdrop=!0,keyboard=!0,onEscapeKeyDown,onShow,onHide,container,autoFocus=!0,enforceFocus=!0,restoreFocus=!0,restoreFocusOptions,onEntered,onExit,onExiting,onEnter,onEntering,onExited,backdropClassName,manager:propsManager,...props},ref)=>{const[modalStyle,setStyle]=(0,react.useState)({}),[animateStaticModal,setAnimateStaticModal]=(0,react.useState)(!1),waitingForMouseUpRef=(0,react.useRef)(!1),ignoreBackdropClickRef=(0,react.useRef)(!1),removeStaticModalAnimationRef=(0,react.useRef)(null),[modal,setModalRef]=(0,useCallbackRef.c)(),mergedRef=(0,useMergedRefs.c)(ref,setModalRef),handleHide=(0,useEventCallback.c)(onHide),isRTL=(0,ThemeProvider.kv)();bsPrefix=(0,ThemeProvider.Ky)(bsPrefix,"modal");const modalContext=(0,react.useMemo)((()=>({onHide:handleHide})),[handleHide]);function getModalManager(){return propsManager||function getSharedManager(options){return sharedManager||(sharedManager=new BootstrapModalManager(options)),sharedManager}({isRTL})}function updateDialogStyle(node){if(!canUseDOM.c)return;const containerIsOverflowing=getModalManager().getScrollbarWidth()>0,modalIsOverflowing=node.scrollHeight>(0,ownerDocument.c)(node).documentElement.clientHeight;setStyle({paddingRight:containerIsOverflowing&&!modalIsOverflowing?scrollbarSize():void 0,paddingLeft:!containerIsOverflowing&&modalIsOverflowing?scrollbarSize():void 0})}const handleWindowResize=(0,useEventCallback.c)((()=>{modal&&updateDialogStyle(modal.dialog)}));useWillUnmount((()=>{(0,removeEventListener.c)(window,"resize",handleWindowResize),null==removeStaticModalAnimationRef.current||removeStaticModalAnimationRef.current()}));const handleDialogMouseDown=()=>{waitingForMouseUpRef.current=!0},handleMouseUp=e=>{waitingForMouseUpRef.current&&modal&&e.target===modal.dialog&&(ignoreBackdropClickRef.current=!0),waitingForMouseUpRef.current=!1},handleStaticModalAnimation=()=>{setAnimateStaticModal(!0),removeStaticModalAnimationRef.current=(0,transitionEnd.c)(modal.dialog,(()=>{setAnimateStaticModal(!1)}))},handleClick=e=>{"static"!==backdrop?ignoreBackdropClickRef.current||e.target!==e.currentTarget?ignoreBackdropClickRef.current=!1:null==onHide||onHide():(e=>{e.target===e.currentTarget&&handleStaticModalAnimation()})(e)},renderBackdrop=(0,react.useCallback)((backdropProps=>(0,jsx_runtime.jsx)("div",{...backdropProps,className:classnames_default()(`${bsPrefix}-backdrop`,backdropClassName,!animation&&"show")})),[animation,backdropClassName,bsPrefix]),baseModalStyle={...style,...modalStyle};baseModalStyle.display="block";return(0,jsx_runtime.jsx)(esm_ModalContext.Provider,{value:modalContext,children:(0,jsx_runtime.jsx)(esm_Modal,{show,ref:mergedRef,backdrop,container,keyboard:!0,autoFocus,enforceFocus,restoreFocus,restoreFocusOptions,onEscapeKeyDown:e=>{keyboard?null==onEscapeKeyDown||onEscapeKeyDown(e):(e.preventDefault(),"static"===backdrop&&handleStaticModalAnimation())},onShow,onHide,onEnter:(node,isAppearing)=>{node&&updateDialogStyle(node),null==onEnter||onEnter(node,isAppearing)},onEntering:(node,isAppearing)=>{null==onEntering||onEntering(node,isAppearing),(0,addEventListener.cp)(window,"resize",handleWindowResize)},onEntered,onExit:node=>{null==removeStaticModalAnimationRef.current||removeStaticModalAnimationRef.current(),null==onExit||onExit(node)},onExiting,onExited:node=>{node&&(node.style.display=""),null==onExited||onExited(node),(0,removeEventListener.c)(window,"resize",handleWindowResize)},manager:getModalManager(),transition:animation?DialogTransition:void 0,backdropTransition:animation?BackdropTransition:void 0,renderBackdrop,renderDialog:dialogProps=>(0,jsx_runtime.jsx)("div",{role:"dialog",...dialogProps,style:baseModalStyle,className:classnames_default()(className,bsPrefix,animateStaticModal&&`${bsPrefix}-static`,!animation&&"show"),onClick:backdrop?handleClick:void 0,onMouseUp:handleMouseUp,"aria-label":ariaLabel,"aria-labelledby":ariaLabelledby,"aria-describedby":ariaDescribedby,children:(0,jsx_runtime.jsx)(Dialog,{...props,onMouseDown:handleDialogMouseDown,className:dialogClassName,contentClassName,children})})})})}));Modal_Modal.displayName="Modal";const react_bootstrap_esm_Modal=Object.assign(Modal_Modal,{Body:esm_ModalBody,Header:esm_ModalHeader,Title:esm_ModalTitle,Footer:esm_ModalFooter,Dialog:esm_ModalDialog,TRANSITION_DURATION:300,BACKDROP_TRANSITION_DURATION:150})}}]);